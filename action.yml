name: 'build fap'
author: 'Oleksii Kutuzov'
description: 'Github Action that builds your fap with ufbt'
branding:
  icon: 'align-left'  
  color: 'green'
inputs:
  fap-dir:
    description: 'Directory with your fap (you should checkout your repository to some folder'
    required: true
  app_id:
    description: 'app_id of your application'
    required: true
  channel:
    description: 'SDK channel to use'
    required: false
    default: 'dev'
runs:
  using: 'composite'
  steps:
    - name: Checkout ufbt
      uses: actions/checkout@v3
      with:
        repository: flipperdevices/flipperzero-ufbt
        path: flipperzero-ufbt
        
    - name: Set path
      shell: bash
      run: echo "$GITHUB_WORKSPACE/flipperzero-ufbt" >> $GITHUB_PATH
      
    - name: Get directory.json
      shell: bash
      run: curl -o directory.json https://update.flipperzero.one/firmware/directory.json
      
    - if: ${{ inputs.channel == 'dev' }}
      shell: bash
      run: echo "{CHANNEL}={0}" >> $GITHUB_ENV
        
    - if: ${{ inputs.channel == 'rc' }}
      shell: bash
      run: echo "{CHANNEL}={1}" >> $GITHUB_ENV
        
    - if: ${{ inputs.channel == 'release' }}
      shell: bash
      run: echo "{CHANNEL}={2}" >> $GITHUB_ENV
      
    - name: Extract version from package.json
      uses: sergeysova/jq-action@v2
      id: version
      with:
        cmd: 'jq .channels[${{ env.CHANNEL }}].versions[0].version directory.json -r'
      
    - name: Cache toolchain
      id: cache-fbt
      uses: actions/cache@v3
      env:
        cache-name: cache-ufbt
      with:
        path: flipperzero-ufbt/.ufbt/
        key: ${{ runner.os }}-${{ env.cache-name }}-${{ inputs.channel }}-${{ steps.version.outputs.value }}
        restore-keys: |
          ${{ runner.os }}-${{ env.cache-name }}-${{ inputs.channel }}-${{ steps.version.outputs.value }}
          
    - if: ${{ steps.cache-fbt.outputs.cache-hit != 'true' }}
      name: Update fbt
      shell: bash
      run: ufbt update --channel=${{ inputs.channel }}
      
    - name: Build fap
      shell: bash
      run: cd ${{ inputs.fap-dir }}; ufbt
      
    - name: Get name
      shell: bash
      run: pwd; basename dist/*.fap; echo "APP_ID=$(basename dist/*.fap)" >> $GITHUB_PATH
      
    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: ${{ env.APP_ID }}
        path: flipperzero-ufbt/.ufbt/build/${{ env.APP_ID }}
